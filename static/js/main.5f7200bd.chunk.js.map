{"version":3,"sources":["components/ListItem/index.jsx","components/StaticList/index.jsx","components/DndList/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["ListItem","text","refProp","draggableProps","dragHandleProps","className","ref","StaticList","renderItems","items","map","id","DndList","useState","listItems","updateListItems","index","draggableId","provided","innerRef","onDragEnd","result","destination","Array","from","splice","source","reorderedItem","droppableId","droppableProps","placeholder","staticListItems","App","dndListItems","setDndListItems","useEffect","ar","a","i","length","j","Math","floor","random","shuffle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f7200bd.chunk.js","sourcesContent":["import React from 'react'\nimport './style.css'\n\nconst ListItem = ({text, refProp, draggableProps, dragHandleProps}) => {\n\n    return (\n        <li className=\"list-item\" ref={refProp} {...draggableProps} {...dragHandleProps}>\n            {text}\n        </li>\n    )\n}\n\nexport default ListItem","import React from 'react'\nimport ListItem from '../ListItem'\n\nconst StaticList = ({items}) => {\n\n    const renderItems = items.map(({id, text}) => (\n        <ListItem text={text} key={id}/>\n    ))\n\n    return (\n        <ul className=\"list\">\n            {renderItems}\n        </ul>\n    )\n}\n\nexport default StaticList","import React, { useState } from 'react'\nimport ListItem from '../ListItem'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\n\nconst DndList = ({items}) => {\n\n    const [listItems, updateListItems] = useState(items)\n\n    const renderItems = listItems.map(({id, text}, index) => (\n        <Draggable key={id} draggableId={'' + id} index={index}>\n            {(provided) => (\n                <ListItem text={text} draggableProps={provided.draggableProps} dragHandleProps={provided.dragHandleProps} refProp={provided.innerRef}/>\n            )}\n        </Draggable>\n    ))\n\n    function handleDragEnd(result) {\n        if (!result.destination) return\n        const items = Array.from(listItems)\n        const [reorderedItem] = items.splice(result.source.index, 1)\n        items.splice(result.destination.index, 0, reorderedItem)\n        updateListItems(items)\n    }\n\n    return (\n        <DragDropContext onDragEnd={handleDragEnd}>\n            <Droppable droppableId=\"cases\">\n                {(provided) => (\n                    <ul className=\"list\" {...provided.droppableProps} ref={provided.innerRef}>\n                        {renderItems}\n                        {provided.placeholder}\n                    </ul>\n                )}\n            </Droppable>\n        </DragDropContext>\n    )\n}\n\nexport default DndList","import './App.css';\nimport StaticList from './components/StaticList'\nimport DndList from './components/DndList'\nimport { useEffect, useState } from 'react';\n\nconst staticListItems = [\n  {\n    id: 0,\n    text: 'Именительный падеж'\n  },\n  {\n    id: 1,\n    text: 'Родительный падеж'\n  },\n  {\n    id: 2,\n    text: 'Дательный падеж'\n  },\n  {\n    id: 3,\n    text: 'Винительный падеж'\n  },\n  {\n    id: 4,\n    text: 'Творительный падеж'\n  },\n  {\n    id: 5,\n    text: 'Предложный падеж'\n  }\n]\n/*\nconst dndListItems = [\n  {\n    id: 0,\n    text: 'Кто? Что?'\n  },\n  {\n    id: 1,\n    text: 'Кого? Чего?'\n  },\n  {\n    id: 2,\n    text: 'Кому? Чему?'\n  },\n  {\n    id: 3,\n    text: 'Кого? Что?'\n  },\n  {\n    id: 4,\n    text: 'Кем? Чем?'\n  },\n  {\n    id: 5,\n    text: '(о) ком? (о) чем?'\n  }\n]*/\n\nfunction shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n  }\n  return [...a];\n}\n\nfunction App() {\n\n  const [dndListItems, setDndListItems] = useState([\n    {\n      id: 0,\n      text: 'Кто? Что?'\n    },\n    {\n      id: 1,\n      text: 'Кого? Чего?'\n    },\n    {\n      id: 2,\n      text: 'Кому? Чему?'\n    },\n    {\n      id: 3,\n      text: 'Кого? Что?'\n    },\n    {\n      id: 4,\n      text: 'Кем? Чем?'\n    },\n    {\n      id: 5,\n      text: '(о) ком? (о) чем?'\n    }\n  ])\n\n  useEffect(() => {\n    let ar = shuffle(dndListItems)\n    setDndListItems(ar)\n  }, [])\n\n  return (\n    <div className=\"app\">\n      <div className=\"lists-container\">\n        <StaticList items={staticListItems}/>\n        <DndList items={dndListItems}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}